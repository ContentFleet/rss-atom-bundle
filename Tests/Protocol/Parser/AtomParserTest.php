<?php

namespace Debril\RssAtomBundle\Protocol\Parser;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-27 at 00:26:35.
 */
class AtomParserTest extends \PHPUnit_Framework_TestCase
{

    /**
     * @var AtomParser
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new AtomParser;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {

    }

    /**
     * @covers Debril\RssAtomBundle\Protocol\Parser::parse
     * @covers Debril\RssAtomBundle\Protocol\Parser\AtomParser::canHandle
     * @expectedException Debril\RssAtomBundle\Protocol\Parser\ParserException
     */
    public function testCannotHandle()
    {
        $file = dirname(__FILE__) . '/../../../Resources/sample-rss.xml';
        $xmlBody = new \SimpleXMLElement(file_get_contents($file));
        $this->assertFalse( $this->object->canHandle($xmlBody) );
        $this->object->parse($xmlBody);
    }

    /**
     * @covers Debril\RssAtomBundle\Protocol\Parser\AtomParser::canHandle
     */
    public function testCanHandle()
    {
        $file = dirname(__FILE__) . '/../../../Resources/sample-atom.xml';
        $xmlBody = new \SimpleXMLElement(file_get_contents($file));
        $this->assertTrue( $this->object->canHandle($xmlBody) );
    }

    /**
     * @covers Debril\RssAtomBundle\Protocol\Parser\AtomParser::checkBodyStructure
     * @expectedException Debril\RssAtomBundle\Protocol\Parser\ParserException
     */
    public function testParseError()
    {
        $file = dirname(__FILE__) . '/../../../Resources/truncated-atom.xml';
        $xmlBody = new \SimpleXMLElement(file_get_contents($file));
        $this->object->parse($xmlBody);
    }

    /**
     * @covers Debril\RssAtomBundle\Protocol\Parser::parse
     * @covers Debril\RssAtomBundle\Protocol\Parser\AtomParser::parseBody
     */
    public function testParse()
    {
        $file = dirname(__FILE__) . '/../../../Resources/sample-atom.xml';
        $xmlBody = new \SimpleXMLElement(file_get_contents($file));
        $feed = $this->object->parse($xmlBody);

        $this->assertInstanceOf("Debril\RssAtomBundle\Protocol\FeedContent", $feed);

        $this->assertNotNull($feed->getId(), "feed->getId() should not return an empty value");
        $this->assertGreaterThan(0, $feed->getItemsCount());
        $this->assertInstanceOf("\DateTime", $feed->getLastModified());
        $this->assertNotNull($feed->getLink());
        $this->assertInternalType("string", $feed->getLink());
        $this->assertNotNull($feed->getSubtitle());
        $this->assertNotNull($feed->getTitle());
    }

}
